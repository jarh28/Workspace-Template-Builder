{"version":3,"sources":["components/SizeSelector.js","components/PrivacySelector.js","components/ColorSelector.js","components/InfoMessage.js","components/IconLoader.js","components/InputField.js","components/WorkspaceSettings.js","components/WorkspacePreview.js","App.js","reportWebVitals.js","index.js"],"names":["SizeButton","value","checked","setSize","setCheckedIdx","idx","componentColor","styles","border","color","Button","sx","textTransform","onClick","SizeSelector","props","useState","checkedIdx","useEffect","size","display","justifyContent","useMediaQuery","transform","transformOrigin","width","style","map","RadioButton","label","description","register","privacy","alignItems","borderStyle","borderWidth","borderColor","borderRadius","marginBottom","FormControlLabel","control","Radio","ListItemText","primary","secondary","PrivacySelector","RadioGroup","defaultValue","onChange","event","setPrivacy","target","flexDirection","data","optionStyles","backgroundColor","ColorOption","ColorPicker","setColor","anchor","setAnchor","console","log","currentTarget","Menu","open","Boolean","MenuItem","onBlur","disableAlhpa","hex","ColorSelector","colors","InfoMessage","Alert","severity","icon","InfoOutlined","title","WorkspaceIcon","logo","Avatar","src","IconLoader","paddingLeft","component","marginLeft","Unarchive","htmlColor","marginRight","type","hidden","accept","files","length","uploadFile","URL","createObjectURL","setLogo","InputField","error","statusSetter","id","setValue","required","pattern","errors","TextField","message","WorkspaceSettings","useForm","handleSubmit","reset","formState","className","onSubmit","alert","JSON","stringify","name","setName","url","setURL","variant","undefined","WorkspacePreview","onlyOne","highlightedItem","getListItem","x","Math","floor","toString","colorItemMini","includes","itemStyles","borderLeft","itemBackColor","position","height","opacity","i","Close","Add","paddingTop","ArrowBack","ArrowForward","Refresh","Chip","Https","fontSize","borderTopRightRadius","borderBottomRightRadius","borderRightWidth","StarRounded","paddingRight","TagFaces","Lock","Public","slice","Array","fill","_","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9544b31.chunk.js","sourcesContent":["import { Button, useMediaQuery } from \"@mui/material\";\nimport { useEffect, useState } from 'react';\n\n\nfunction SizeButton({ value, checked, setSize, setCheckedIdx, idx }) {\n    const componentColor = '#48B5FE'\n    const styles = checked ? {\n        border: `1px solid ${componentColor}`,\n        color: componentColor\n    } : {\n        border: '1px solid #E4E4E4',\n        color: '#000',\n    };\n\n    const handleClick = () => {\n        setSize(value);\n        setCheckedIdx(idx);\n    }\n\n    return (\n        <Button \n        sx={{\n            ...styles, \n            textTransform: 'initial'\n        }} \n        onClick={handleClick}>\n            {value}\n        </Button>\n    );\n}\n\nexport default function SizeSelector(props) {    \n    const values = [\"Sólo yo\", \"2 - 10\", \"11 - 25\", \"26 - 50\", \"51 - 100\", \"500 +\"];\n    const [checkedIdx, setCheckedIdx] = useState(0);\n\n    useEffect(() => {\n        props.size === 'Sólo yo' && setCheckedIdx(0)\n    }, [props.size]);\n    \n    const mediaQuery = useMediaQuery(\"(max-width: 500px)\");\n\n    let styles = {\n        display: \"flex\",\n        justifyContent: \"space-evenly\"\n    };\n\n    if (mediaQuery) {\n        styles = {\n            ...styles, \n            transform: \"scale(0.9)\",\n            transformOrigin: \"center left\",\n            width: \"130%\",\n        }\n    }\n\n    return (\n        <div \n        style={styles}>\n            {values.map((value, idx) => (\n                <SizeButton\n                key={idx}\n                value={value} \n                checked={idx === checkedIdx} \n                setSize={props.setSize}\n                setCheckedIdx={setCheckedIdx}\n                idx={idx} />\n            ))}\n        </div>\n    );\n}\n","import { FormControlLabel, RadioGroup, Radio, ListItemText } from \"@mui/material\";\n\n\nfunction RadioButton({ label, value, description, register, privacy }) {\n    const checked = value === privacy; \n    \n    const componentColor = checked ? '#48B5FE' : \"#CFD0D2\";\n    const styles = {\n        width: '48%',\n        alignItems: 'start',\n        borderStyle: 'solid',\n        borderWidth: '1px',\n        borderColor: \"#E4E4E4\",\n        borderRadius: '5px',\n        marginBottom: '2vh'\n    }\n\n    if (checked) {\n        styles.borderColor = componentColor;\n        styles.color = componentColor;\n    }\n\n    return (\n        <FormControlLabel \n        sx={styles}\n        control={\n            <Radio sx={{\n                color: componentColor,\n                \"&.Mui-checked\": {\n                    color: componentColor\n                }\n            }} />\n        } \n        value={value}\n        label={\n            <ListItemText \n            primary={label} \n            secondary={description}></ListItemText>\n        }\n        {...register(\"privacy\")}\n        />\n    );\n}\n\nexport default function PrivacySelector(props) {\n    const values = [\n        {\n            label: \"Privado\", \n            value: \"private\", \n            description: \"El contenido será visible sólo para ti y los miembros de tu Organización\"\n        }, \n        {\n            label: \"Público\", \n            value: \"public\", \n            description: \"Cualquiera con el vínculo podrá ver la actividad de tu Organización\"\n        }\n    ];\n    \n    const handleChange = (event) => {\n        props.setPrivacy(event.target.value);\n    }\n    \n    return (\n        <RadioGroup \n        defaultValue=\"private\" \n        value={props.privacy} \n        onChange={handleChange}\n        sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-evenly'\n        }}>\n            {values.map((data, idx) => (\n                <RadioButton \n                key={idx} \n                label={data.label} \n                value={data.value} \n                description={data.description} \n                register={props.register} \n                privacy={props.privacy} />\n            ))}\n        </RadioGroup>\n    );\n}\n","import { RadioGroup, FormControlLabel, Radio, Menu, MenuItem, useMediaQuery } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { ChromePicker } from \"react-color\";\n\n\nconst optionStyles = (color) => ({\n    color: color, \n    backgroundColor: color,\n    transform: \"scale(0.9)\",\n    \"&:hover\": {\n        backgroundColor: color,\n    },\n    \"&.Mui-checked\": {\n        color: color,\n        backgroundColor: \"transparent\",\n        transform: \"scale(2.0)\",\n    }\n})\n\nfunction ColorOption({ color, register }) {\n    return (\n        <FormControlLabel \n        value={color} \n        control={\n            <Radio \n            sx={optionStyles(color)} />\n        } \n        {...register(\"color\")} />\n    );\n}\n\nfunction ColorPicker({ color, setColor, register }) {\n    const [anchor, setAnchor] = useState(null);\n\n    const handleClick = (event) => {\n        console.log(event.currentTarget);\n        setAnchor(event.currentTarget);\n    };\n\n    const handleBlur = () => {\n        setAnchor(null);\n    };\n\n    const handleChange = (color) => {\n        setColor(color.hex);\n    };\n\n    return (\n            <>\n            <FormControlLabel \n            value={color} \n            control={\n                <Radio \n                sx={optionStyles(color)} />\n            } \n            {...register(\"color\")}\n            onClick={handleClick} />\n            <Menu \n            anchor={anchor} \n            open={Boolean(anchor)}>\n                <MenuItem \n                onBlur={handleBlur}>\n                    <ChromePicker \n                    disableAlhpa={true}\n                    color={color}\n                    onChange={handleChange} />\n                </MenuItem>\n            </Menu>\n        </>\n    );\n}\n\nexport default function ColorSelector(props) {\n    const colors = [\"#39B0FF\", \"#04B58B\", \"#3E9C4B\", \"#B6BC00\", \"#E59100\", \"#E55C00\", \"#EE1F50\", \"#D6198A\", \"#B321F1\"];\n    \n    const handleChange = (event) => {\n        props.setColor(event.target.value);\n    }\n\n    const mediaQuery = useMediaQuery(\"(max-width: 500px)\");\n\n    let styles = {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n    };\n\n    if (mediaQuery) {\n        styles = {\n            ...styles, \n            transform: \"scale(0.8)\",\n            transformOrigin: \"center left\",\n            width: \"130%\",\n        }\n    }\n\n    return (\n        <RadioGroup\n        defaultValue={colors[0]}\n        value={props.color}\n        onChange={handleChange}\n        sx={styles}>\n            {colors.map((color, idx) => (\n                <ColorOption \n                key={idx} \n                color={color} \n                register={props.register} />\n            ))}\n            <ColorPicker \n            color={props.color} \n            setColor={props.setColor} \n            register={props.register}/>\n        </RadioGroup>\n    );\n}\n","import { InfoOutlined } from '@mui/icons-material';\nimport { Alert } from '@mui/material'\n\n\nexport default function InfoMessage(props) {\n    return (\n        <Alert \n        severity='info'\n        icon={\n            <InfoOutlined\n            sx={{\n                transform: \"rotate(180deg)\",\n                color: \"#7F7F7F\"\n            }}></InfoOutlined>\n        }\n        sx={{\n            color: \"#7F7F7F\",\n            backgroundColor: '#FFF'\n        }}>\n            <div\n            style={{\n                marginBottom: \"2vh\"\n            }}>{props.title}</div>\n            <div>{props.description}</div>\n        </Alert>\n    );\n}\n","import { Avatar, Button } from '@mui/material';\nimport { Unarchive } from '@mui/icons-material'\n\n\nfunction WorkspaceIcon({ logo }) {\n    return (\n        <Avatar \n        src={logo ?? ''} \n        sx={{\n            backgroundColor: 'darkslategray'\n        }}>\n            <strong>B</strong>\n        </Avatar>\n    );\n}\n\nexport default function IconLoader(props) {\n    const handleUpload = (event) => {\n        if (event.target.files.length > 0) {\n            const uploadFile = URL.createObjectURL(event.target.files[0]);\n            props.setLogo(uploadFile);            \n        }\n    }\n\n    return (\n        <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            paddingLeft: \"2vh\"\n        }}>\n            <WorkspaceIcon logo={props.logo} />\n            <Button \n            component=\"label\" \n            sx={{\n                color: 'gray', \n                marginLeft: '2vh', \n                border: '1px solid #E4E4E4',\n                textTransform: 'initial',\n            }}>\n                <Unarchive \n                htmlColor='gray' \n                sx={{\n                    marginRight: \"1vh\"\n                }}/>\n                Subir logo \n                <input \n                type=\"file\" \n                hidden \n                accept='.png, .jpg, .jpeg' \n                {...props.register(\"logo\")} \n                onChange={handleUpload}/>\n        </Button>\n        </div>    \n    );\n}\n","import { TextField, Alert } from \"@mui/material\";\n\n\nexport default function InputField({ id, label, value, setValue, register, required=true, pattern={}, errors }) {\n    const handleChange = (statusSetter) => (event) => {\n        statusSetter(event.target.value);\n    };\n    \n    const handleAlert = (error) => {\n        if (error) {\n            return <Alert severity=\"error\">{error.message}</Alert>;\n        } else {\n            return value && <Alert>Todo correcto !</Alert>;\n        }\n    }\n\n    return (\n        <>\n            <TextField\n            label={label}\n            value={value}\n            {...register(id, {required: required, pattern: pattern})} \n            onChange={handleChange(setValue)} \n            error={errors[id]} />\n            {handleAlert(errors[id])} \n        </>\n    );\n}\n","import { Button } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport SizeSelector from './SizeSelector';\nimport PrivacySelector from './PrivacySelector';\nimport ColorSelector from './ColorSelector';\nimport InfoMessage from './InfoMessage';\nimport IconLoader from './IconLoader';\nimport InputField from './InputField';\n\n\nexport default function WorkspaceSettings(props) {    \n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    const onSubmit = data => {\n        data.logo = props.logo;\n        data.size = props.size;\n        alert(JSON.stringify(data, null, 2));\n    };\n\n    const handleDiscard = () => {\n        props.setLogo(undefined);\n        props.setName('');\n        props.setURL('');\n        props.setSize('Sólo yo');\n        props.setColor('#39B0FF');\n        props.setPrivacy('private');\n        reset();\n    };\n\n    return (\n        <div className=\"workspace-settings-component\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <h1>Configuración</h1>\n\n                {/** LOGO DEL ESPACIO */}\n                <h2>Logo del espacio</h2>\n                <IconLoader \n                logo={props.logo} \n                setLogo={props.setLogo} \n                register={register} />\n                <InfoMessage \n                title={\"Este logo identificará tu espacio entre el resto.\"}\n                description={\"Preferiblemente sube una imagen .png igual o superior a 65px a 72 ppp con fondo transparente.\"} />\n                \n                {/** NOMBRE DEL ESPACIO */}\n                <h2>Nombre del espacio</h2>\n                <InputField\n                id=\"name\"\n                label=\"Ep. Mi espacio de trabajo\" \n                value={props.name} \n                setValue={props.setName} \n                register={register}\n                required=\"Debes ponerle un nombre a tu espacio de trabajo.\"  \n                errors={errors} />\n\n                {/** URL DEL ESPACIO (DIRECCIÓN WEB) */}\n                <h2>URL del espacio (dirección web)</h2>\n                <InputField\n                id=\"url\"\n                label=\"Ep: mi.dominio.dofleini.com\" \n                value={props.url} \n                setValue={props.setURL} \n                register={register}\n                required=\"Tu espacio de trabajo debe tener una dirección web.\"\n                pattern={{value: /(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g, message: \"Parece que tu URL no es válida :(\"}} \n                errors={errors} />\n\n                <InfoMessage \n                title=\"Puedes cambiar la URL de tu espacio (dirección web) en cualquier momento, pero por cortesía hacia tus compañeros de trabajo y otros usuarios de Plankton, por favor no lo hagas muy seguido :)\"\n                description=\"Nota: Si cambias la URL de tu espacio, Plankton automáticamente redireccionará desde la antigua dirección hacia la nueva. En cualquier caso, deberías asegurarte que tus compañeros sepan acerca del cambio porque la dirección anterior pasará a estar libre y puede ser usada por otro espacio en el futuro.\"/>\n\n                {/** ¿CUÁNTAS PERSONAS TRABAJARÁN CONTIGO, INCLUYÉNDOTE A TI */}\n                <h2>\n                    ¿Cuántas personas trabajarán contigo, incluyéndote a ti?\n                </h2>\n                <SizeSelector \n                size={props.size} \n                setSize={props.setSize}\n                />\n\n                {/** COLOR DEL TEMA */}\n                <h2>\n                    Color del tema\n                </h2>        \n                <ColorSelector \n                color={props.color} \n                setColor={props.setColor} \n                register={register} />\n\n                {/** PRIVACIDAD DEL ESPACIO*/}\n                <h2>\n                    Privacidad del espacio\n                </h2>\n                <PrivacySelector \n                privacy={props.privacy} \n                setPrivacy={props.setPrivacy} \n                register={register} />\n\n                \n                {/** CONTROL DEL FORMULARIO */}\n                <section className='form-section-controls'>\n                    <Button \n                    variant=\"contained\" \n                    type='submit' \n                    sx={{\n                        textTransform: 'initial',\n                        \"&:hover\": {\n                            backgroundColor: \"#48B5FE\",\n                        }\n                    }}>Guardar cambios</Button>\n                    <Button \n                    variant=\"outlined\" \n                    onClick={handleDiscard}\n                    sx={{\n                        textTransform: 'initial'\n                    }}>Descartar</Button>\n                </section>\n            </form>\n        </div>\n    );\n}\n","import { Avatar, Chip } from \"@mui/material\";\nimport { ArrowBack, ArrowForward, Refresh, Https, Close, Add, StarRounded, TagFaces, Public, Lock } from '@mui/icons-material';\n\n\n// TODO: Refactor this component into smaller ones. Then separates files at 'components' folder in two subfolders called: Settings and Preview.\nexport default function WorkspacePreview({ logo, name, url, size, color, privacy }) {\n    const data = [\n        {'primary': [0.35, 0.35, 0.10], 'secondary': [0.5]},\n        {'primary': [0.10, 0.40, 0.05, 0.30], 'secondary': [0.2, 0.5]},\n        {'primary': [0.35, 0.35, 0.10], 'secondary': [0.5]},\n        {'primary': [0.33, 0.33, 0.10, 0.05], 'secondary': [0.5, 0.2]},\n        {'primary': [0.05, 0.10, 0.33, 0.33], 'secondary': [0.65]},\n        {'primary': [0.35, 0.35, 0.10], 'secondary': [0.4, 0.1, 0.2]},\n    ];\n\n    const onlyOne = size === 'Sólo yo';\n    const highlightedItem = onlyOne ? [1] : [2, 5];\n    const getListItem = (data, id) => {\n        let {primary, secondary} = data;\n        primary = primary.map(x => Math.floor(270 * x).toString() + 'px');\n        secondary = secondary.map(x => Math.floor(170 * x).toString() + 'px');\n        \n        const colorItemMini = highlightedItem.includes(id) ? color : '#E2E3E5';\n        const itemStyles = highlightedItem.includes(id) ? {borderLeft: `2px solid ${color}`} : {};\n        const itemBackColor = highlightedItem.includes(id) ? (\n            <span style={{\n                position: 'fixed',\n                backgroundColor: color,\n                height: 'inherit',\n                width: 'inherit',\n                opacity: 0.4\n            }}></span>\n        ) : <></>\n\n        return (\n            <li id={id} className=\"browser-main-item\" style={itemStyles}>\n                {itemBackColor}\n                <span>\n                   {primary.map((x, i) => <span className=\"browser-main-item-mini\" style={{width: x, backgroundColor: colorItemMini}}></span>)}\n                </span>\n                <span className=\"browser-main-secondary-item\">\n                    {secondary.map((x, i) => <span className=\"browser-main-item-mini\" style={{width: x, backgroundColor: colorItemMini}}></span>)}\n                </span>\n            </li>\n        );\n    }\n\n    return (\n        <div className=\"workspace-preview-component\">\n            <header>\n                <section className=\"browser-tab-bar\">\n                    <div className=\"browser-tab\">\n                        <span>Plankton - {name || 'Mi espacio'}</span>\n                        <Close />\n                    </div>\n                    <Add sx={{paddingTop: '10px', paddingLeft: '1vh'}}/>\n                </section>\n                <section className=\"browser-menu\">\n                    <ArrowBack/>\n                    <ArrowForward color='disabled' sx={{marginLeft: '1vh'}}/>\n                    <Refresh sx={{marginLeft: '1vh'}}/>\n                    <Chip label={\n                        <div className=\"browser-menu-url\">\n                            <Https fontSize='' htmlColor=\"#388e3c\"/>\n                            <span>\n                                <span style={{color: \"#388e3c\"}}>\n                                    Secure | https://\n                                </span>\n                                <span>\n                                    {url || 'mi.dominio.dofleini.com'}\n                                </span>\n                            </span>\n                        </div>\n                    } sx={{\n                        width: '100%', display: 'flex', justifyContent: 'start', borderTopRightRadius: '0', borderBottomRightRadius: '0', borderColor: '#196FC1', borderStyle: 'solid', borderWidth: '1px', borderRightWidth: '0', marginLeft: '1vh'\n                    }}></Chip>\n                </section>\n            </header>\n\n            <main className=\"browser-workspace-template\">\n                <section className=\"browser-main-content\">\n                    <header>\n                        <span style={{display: 'flex', alignItems: 'center'}}>\n                            <span id=\"browser-main-search\"></span>\n                            <StarRounded fontSize=\"large\" htmlColor=\"#FFC60A\"/>\n                        </span>\n                        <span id=\"browser-main-login\" style={{backgroundColor: color}}></span>\n                    </header>\n                    <main>\n                        <div style={{\n                            display: \"flex\", \n                            justifyContent: \"space-between\",\n                            alignItems: 'center',\n                            paddingRight: \"5vh\",\n                            paddingLeft: \"2vh\"\n                        }}>\n                            <span id=\"browser-main-title\"></span>\n                            <div>\n                                <Chip icon={<TagFaces />} label={size} size='small' sx={{marginRight: \"2vh\"}} />\n                                <Chip icon={privacy === 'private' ? <Lock /> : <Public />} label={privacy === 'private' ? \"Privado\" : \"Público\"} size='small' />\n                            </div>\n                        </div>\n                        <ul className=\"browser-main-list\">\n                            {onlyOne ? data.slice(0, 3).map((getListItem)): data.map((getListItem))}\n                        </ul>\n                    </main>\n                </section>\n                <aside className=\"browser-aside-menu\">\n                    <Avatar src={logo ?? ''} sx={{backgroundColor: 'darkslategray'}}>B</Avatar>\n                    {Array((onlyOne ? 2 : 4)).fill(<span></span>).map((_, i) => {\n                        return i === (onlyOne ? 0 : 1) ? <span style={{backgroundColor: color}}></span>: <span style={{backgroundColor: '#CFD0D2'}}></span>;\n                    })}\n                </aside>\n            </main>\n        </div>\n    );\n}\n","import './App.css';\nimport WorkspaceSettings from './components/WorkspaceSettings';\nimport WorkspacePreview from './components/WorkspacePreview';\nimport { useState } from 'react';\n\nfunction App() {\n  const [logo, setLogo] = useState(undefined);\n  const [name, setName] = useState('');\n  const [url, setURL] = useState('');\n  const [size, setSize] = useState('Sólo yo');\n\n  const [color, setColor] = useState('#39B0FF')\n  const [privacy, setPrivacy] = useState('private');\n\n  return (\n    <div className=\"main-container\">\n      <WorkspaceSettings\n        logo={logo} setLogo={setLogo} \n        name={name} setName={setName}\n        url={url} setURL={setURL}\n        size={size} setSize={setSize}\n        color={color} setColor={setColor}\n        privacy={privacy} setPrivacy={setPrivacy}\n      />\n      <WorkspacePreview \n        logo={logo}\n        name={name}\n        url={url}\n        size={size}\n        color={color}\n        privacy={privacy}\n      /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}